// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sptfyapi.proto

/*
Package sptfyapi is a generated protocol buffer package.

It is generated from these files:
	sptfyapi.proto

It has these top-level messages:
	InfoRequest
	InfoResponse
	AuthRequest
	AuthResponse
	PlaybackNextRequest
	PlaybackNextResponse
	PlaybackPlayRequest
	PlaybackPlayResponse
	PlaybackPauseRequest
	PlaybackPauseResponse
	TrackSearchRequest
	TrackSearchResponse
	TrackResult
	AlbumSearchRequest
	AlbumSearchResponse
	AlbumResult
	ArtistSearchRequest
	ArtistSearchResponse
	ArtistResult
*/
package sptfyapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InfoRequest struct {
	Suri string `protobuf:"bytes,1,opt,name=suri" json:"suri,omitempty"`
}

func (m *InfoRequest) Reset()                    { *m = InfoRequest{} }
func (m *InfoRequest) String() string            { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()               {}
func (*InfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InfoRequest) GetSuri() string {
	if m != nil {
		return m.Suri
	}
	return ""
}

type InfoResponse struct {
	DisplayName   string `protobuf:"bytes,1,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Email         string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	CurrentSong   string `protobuf:"bytes,3,opt,name=current_song,json=currentSong" json:"current_song,omitempty"`
	ServerVersion string `protobuf:"bytes,4,opt,name=server_version,json=serverVersion" json:"server_version,omitempty"`
}

func (m *InfoResponse) Reset()                    { *m = InfoResponse{} }
func (m *InfoResponse) String() string            { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()               {}
func (*InfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InfoResponse) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *InfoResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *InfoResponse) GetCurrentSong() string {
	if m != nil {
		return m.CurrentSong
	}
	return ""
}

func (m *InfoResponse) GetServerVersion() string {
	if m != nil {
		return m.ServerVersion
	}
	return ""
}

type AuthRequest struct {
	Email    string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password []byte `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (m *AuthRequest) Reset()                    { *m = AuthRequest{} }
func (m *AuthRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()               {}
func (*AuthRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AuthRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AuthRequest) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

type AuthResponse struct {
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *AuthResponse) Reset()                    { *m = AuthResponse{} }
func (m *AuthResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()               {}
func (*AuthResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AuthResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type PlaybackNextRequest struct {
	Next string `protobuf:"bytes,1,opt,name=next" json:"next,omitempty"`
}

func (m *PlaybackNextRequest) Reset()                    { *m = PlaybackNextRequest{} }
func (m *PlaybackNextRequest) String() string            { return proto.CompactTextString(m) }
func (*PlaybackNextRequest) ProtoMessage()               {}
func (*PlaybackNextRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PlaybackNextRequest) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

type PlaybackNextResponse struct {
	TrackUri string `protobuf:"bytes,1,opt,name=track_uri,json=trackUri" json:"track_uri,omitempty"`
}

func (m *PlaybackNextResponse) Reset()                    { *m = PlaybackNextResponse{} }
func (m *PlaybackNextResponse) String() string            { return proto.CompactTextString(m) }
func (*PlaybackNextResponse) ProtoMessage()               {}
func (*PlaybackNextResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PlaybackNextResponse) GetTrackUri() string {
	if m != nil {
		return m.TrackUri
	}
	return ""
}

type PlaybackPlayRequest struct {
	Play     bool   `protobuf:"varint,1,opt,name=play" json:"play,omitempty"`
	TrackUri string `protobuf:"bytes,2,opt,name=track_uri,json=trackUri" json:"track_uri,omitempty"`
}

func (m *PlaybackPlayRequest) Reset()                    { *m = PlaybackPlayRequest{} }
func (m *PlaybackPlayRequest) String() string            { return proto.CompactTextString(m) }
func (*PlaybackPlayRequest) ProtoMessage()               {}
func (*PlaybackPlayRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PlaybackPlayRequest) GetPlay() bool {
	if m != nil {
		return m.Play
	}
	return false
}

func (m *PlaybackPlayRequest) GetTrackUri() string {
	if m != nil {
		return m.TrackUri
	}
	return ""
}

type PlaybackPlayResponse struct {
	PlaybackUrl string `protobuf:"bytes,1,opt,name=playback_url,json=playbackUrl" json:"playback_url,omitempty"`
}

func (m *PlaybackPlayResponse) Reset()                    { *m = PlaybackPlayResponse{} }
func (m *PlaybackPlayResponse) String() string            { return proto.CompactTextString(m) }
func (*PlaybackPlayResponse) ProtoMessage()               {}
func (*PlaybackPlayResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PlaybackPlayResponse) GetPlaybackUrl() string {
	if m != nil {
		return m.PlaybackUrl
	}
	return ""
}

type PlaybackPauseRequest struct {
	Pause bool `protobuf:"varint,1,opt,name=pause" json:"pause,omitempty"`
}

func (m *PlaybackPauseRequest) Reset()                    { *m = PlaybackPauseRequest{} }
func (m *PlaybackPauseRequest) String() string            { return proto.CompactTextString(m) }
func (*PlaybackPauseRequest) ProtoMessage()               {}
func (*PlaybackPauseRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PlaybackPauseRequest) GetPause() bool {
	if m != nil {
		return m.Pause
	}
	return false
}

type PlaybackPauseResponse struct {
	PlaybackUrl string `protobuf:"bytes,1,opt,name=playback_url,json=playbackUrl" json:"playback_url,omitempty"`
}

func (m *PlaybackPauseResponse) Reset()                    { *m = PlaybackPauseResponse{} }
func (m *PlaybackPauseResponse) String() string            { return proto.CompactTextString(m) }
func (*PlaybackPauseResponse) ProtoMessage()               {}
func (*PlaybackPauseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PlaybackPauseResponse) GetPlaybackUrl() string {
	if m != nil {
		return m.PlaybackUrl
	}
	return ""
}

type TrackSearchRequest struct {
	Query    string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	Pagesize uint32 `protobuf:"varint,2,opt,name=pagesize" json:"pagesize,omitempty"`
	Pagenum  uint32 `protobuf:"varint,3,opt,name=pagenum" json:"pagenum,omitempty"`
}

func (m *TrackSearchRequest) Reset()                    { *m = TrackSearchRequest{} }
func (m *TrackSearchRequest) String() string            { return proto.CompactTextString(m) }
func (*TrackSearchRequest) ProtoMessage()               {}
func (*TrackSearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *TrackSearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *TrackSearchRequest) GetPagesize() uint32 {
	if m != nil {
		return m.Pagesize
	}
	return 0
}

func (m *TrackSearchRequest) GetPagenum() uint32 {
	if m != nil {
		return m.Pagenum
	}
	return 0
}

type TrackSearchResponse struct {
	Results []*TrackResult `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *TrackSearchResponse) Reset()                    { *m = TrackSearchResponse{} }
func (m *TrackSearchResponse) String() string            { return proto.CompactTextString(m) }
func (*TrackSearchResponse) ProtoMessage()               {}
func (*TrackSearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *TrackSearchResponse) GetResults() []*TrackResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type TrackResult struct {
	Suri     string `protobuf:"bytes,1,opt,name=suri" json:"suri,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Artist   string `protobuf:"bytes,3,opt,name=artist" json:"artist,omitempty"`
	Album    string `protobuf:"bytes,4,opt,name=album" json:"album,omitempty"`
	Spftytag string `protobuf:"bytes,5,opt,name=spftytag" json:"spftytag,omitempty"`
	Metadata []byte `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *TrackResult) Reset()                    { *m = TrackResult{} }
func (m *TrackResult) String() string            { return proto.CompactTextString(m) }
func (*TrackResult) ProtoMessage()               {}
func (*TrackResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *TrackResult) GetSuri() string {
	if m != nil {
		return m.Suri
	}
	return ""
}

func (m *TrackResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TrackResult) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

func (m *TrackResult) GetAlbum() string {
	if m != nil {
		return m.Album
	}
	return ""
}

func (m *TrackResult) GetSpftytag() string {
	if m != nil {
		return m.Spftytag
	}
	return ""
}

func (m *TrackResult) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type AlbumSearchRequest struct {
	Query    string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	Pagesize uint32 `protobuf:"varint,2,opt,name=pagesize" json:"pagesize,omitempty"`
	Pagenum  uint32 `protobuf:"varint,3,opt,name=pagenum" json:"pagenum,omitempty"`
}

func (m *AlbumSearchRequest) Reset()                    { *m = AlbumSearchRequest{} }
func (m *AlbumSearchRequest) String() string            { return proto.CompactTextString(m) }
func (*AlbumSearchRequest) ProtoMessage()               {}
func (*AlbumSearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AlbumSearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *AlbumSearchRequest) GetPagesize() uint32 {
	if m != nil {
		return m.Pagesize
	}
	return 0
}

func (m *AlbumSearchRequest) GetPagenum() uint32 {
	if m != nil {
		return m.Pagenum
	}
	return 0
}

type AlbumSearchResponse struct {
	Results []*ArtistResult `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *AlbumSearchResponse) Reset()                    { *m = AlbumSearchResponse{} }
func (m *AlbumSearchResponse) String() string            { return proto.CompactTextString(m) }
func (*AlbumSearchResponse) ProtoMessage()               {}
func (*AlbumSearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AlbumSearchResponse) GetResults() []*ArtistResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type AlbumResult struct {
	Suri     string `protobuf:"bytes,1,opt,name=suri" json:"suri,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Artist   string `protobuf:"bytes,3,opt,name=artist" json:"artist,omitempty"`
	Sptfytag string `protobuf:"bytes,4,opt,name=sptfytag" json:"sptfytag,omitempty"`
	Metadata []byte `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *AlbumResult) Reset()                    { *m = AlbumResult{} }
func (m *AlbumResult) String() string            { return proto.CompactTextString(m) }
func (*AlbumResult) ProtoMessage()               {}
func (*AlbumResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *AlbumResult) GetSuri() string {
	if m != nil {
		return m.Suri
	}
	return ""
}

func (m *AlbumResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AlbumResult) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

func (m *AlbumResult) GetSptfytag() string {
	if m != nil {
		return m.Sptfytag
	}
	return ""
}

func (m *AlbumResult) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type ArtistSearchRequest struct {
	Query    string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	Pagesize uint32 `protobuf:"varint,2,opt,name=pagesize" json:"pagesize,omitempty"`
	Pagenum  uint32 `protobuf:"varint,3,opt,name=pagenum" json:"pagenum,omitempty"`
}

func (m *ArtistSearchRequest) Reset()                    { *m = ArtistSearchRequest{} }
func (m *ArtistSearchRequest) String() string            { return proto.CompactTextString(m) }
func (*ArtistSearchRequest) ProtoMessage()               {}
func (*ArtistSearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ArtistSearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *ArtistSearchRequest) GetPagesize() uint32 {
	if m != nil {
		return m.Pagesize
	}
	return 0
}

func (m *ArtistSearchRequest) GetPagenum() uint32 {
	if m != nil {
		return m.Pagenum
	}
	return 0
}

type ArtistSearchResponse struct {
	Results []*ArtistResult `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *ArtistSearchResponse) Reset()                    { *m = ArtistSearchResponse{} }
func (m *ArtistSearchResponse) String() string            { return proto.CompactTextString(m) }
func (*ArtistSearchResponse) ProtoMessage()               {}
func (*ArtistSearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ArtistSearchResponse) GetResults() []*ArtistResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type ArtistResult struct {
	Suri     string `protobuf:"bytes,1,opt,name=suri" json:"suri,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Sptfytag string `protobuf:"bytes,3,opt,name=sptfytag" json:"sptfytag,omitempty"`
	Metadata []byte `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *ArtistResult) Reset()                    { *m = ArtistResult{} }
func (m *ArtistResult) String() string            { return proto.CompactTextString(m) }
func (*ArtistResult) ProtoMessage()               {}
func (*ArtistResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ArtistResult) GetSuri() string {
	if m != nil {
		return m.Suri
	}
	return ""
}

func (m *ArtistResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ArtistResult) GetSptfytag() string {
	if m != nil {
		return m.Sptfytag
	}
	return ""
}

func (m *ArtistResult) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterType((*InfoRequest)(nil), "sptfyapi.InfoRequest")
	proto.RegisterType((*InfoResponse)(nil), "sptfyapi.InfoResponse")
	proto.RegisterType((*AuthRequest)(nil), "sptfyapi.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "sptfyapi.AuthResponse")
	proto.RegisterType((*PlaybackNextRequest)(nil), "sptfyapi.PlaybackNextRequest")
	proto.RegisterType((*PlaybackNextResponse)(nil), "sptfyapi.PlaybackNextResponse")
	proto.RegisterType((*PlaybackPlayRequest)(nil), "sptfyapi.PlaybackPlayRequest")
	proto.RegisterType((*PlaybackPlayResponse)(nil), "sptfyapi.PlaybackPlayResponse")
	proto.RegisterType((*PlaybackPauseRequest)(nil), "sptfyapi.PlaybackPauseRequest")
	proto.RegisterType((*PlaybackPauseResponse)(nil), "sptfyapi.PlaybackPauseResponse")
	proto.RegisterType((*TrackSearchRequest)(nil), "sptfyapi.TrackSearchRequest")
	proto.RegisterType((*TrackSearchResponse)(nil), "sptfyapi.TrackSearchResponse")
	proto.RegisterType((*TrackResult)(nil), "sptfyapi.TrackResult")
	proto.RegisterType((*AlbumSearchRequest)(nil), "sptfyapi.AlbumSearchRequest")
	proto.RegisterType((*AlbumSearchResponse)(nil), "sptfyapi.AlbumSearchResponse")
	proto.RegisterType((*AlbumResult)(nil), "sptfyapi.AlbumResult")
	proto.RegisterType((*ArtistSearchRequest)(nil), "sptfyapi.ArtistSearchRequest")
	proto.RegisterType((*ArtistSearchResponse)(nil), "sptfyapi.ArtistSearchResponse")
	proto.RegisterType((*ArtistResult)(nil), "sptfyapi.ArtistResult")
}

func init() { proto.RegisterFile("sptfyapi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 729 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x5b, 0x4f, 0xd4, 0x40,
	0x14, 0x4e, 0x61, 0x81, 0xe5, 0xb4, 0xcb, 0xc3, 0x70, 0x49, 0xb3, 0x8a, 0x42, 0x13, 0x13, 0x4c,
	0x0c, 0xea, 0x12, 0x1f, 0xf4, 0xc5, 0x90, 0x18, 0x6f, 0x51, 0x42, 0x0a, 0xf8, 0xba, 0x0e, 0xdd,
	0xd9, 0xa5, 0x61, 0xb7, 0x2d, 0x33, 0x53, 0x64, 0x7d, 0xf7, 0x07, 0xf8, 0xec, 0x9f, 0x35, 0x73,
	0xdb, 0xce, 0x94, 0x62, 0xd0, 0xc8, 0x53, 0xe7, 0x5c, 0xe6, 0x7c, 0x73, 0xbe, 0x99, 0xf3, 0xed,
	0xc2, 0x0a, 0x2b, 0xf8, 0x70, 0x8a, 0x8b, 0x74, 0xb7, 0xa0, 0x39, 0xcf, 0x51, 0xdb, 0xd8, 0xd1,
	0x36, 0xf8, 0x1f, 0xb2, 0x61, 0x1e, 0x93, 0x8b, 0x92, 0x30, 0x8e, 0x10, 0xb4, 0x58, 0x49, 0xd3,
	0xd0, 0xdb, 0xf2, 0x76, 0x96, 0x63, 0xb9, 0x8e, 0x7e, 0x7a, 0x10, 0xa8, 0x1c, 0x56, 0xe4, 0x19,
	0x23, 0x68, 0x1b, 0x82, 0x41, 0xca, 0x8a, 0x31, 0x9e, 0xf6, 0x33, 0x3c, 0x21, 0x3a, 0xd9, 0xd7,
	0xbe, 0x03, 0x3c, 0x21, 0x68, 0x0d, 0x16, 0xc8, 0x04, 0xa7, 0xe3, 0x70, 0x4e, 0xc6, 0x94, 0x21,
	0x36, 0x26, 0x25, 0xa5, 0x24, 0xe3, 0x7d, 0x96, 0x67, 0xa3, 0x70, 0x5e, 0x6d, 0xd4, 0xbe, 0xa3,
	0x3c, 0x1b, 0xa1, 0x47, 0xb0, 0xc2, 0x08, 0xbd, 0x24, 0xb4, 0x7f, 0x49, 0x28, 0x4b, 0xf3, 0x2c,
	0x6c, 0xc9, 0xa4, 0x8e, 0xf2, 0x7e, 0x51, 0xce, 0xe8, 0x35, 0xf8, 0xfb, 0x25, 0x3f, 0x33, 0xc7,
	0x9e, 0xc1, 0x79, 0x36, 0x5c, 0x17, 0xda, 0x05, 0x66, 0xec, 0x5b, 0x4e, 0x07, 0xf2, 0x1c, 0x41,
	0x3c, 0xb3, 0xa3, 0xe7, 0x10, 0xa8, 0x02, 0x55, 0x4f, 0x38, 0x49, 0x08, 0x63, 0x7d, 0x9e, 0x9f,
	0x93, 0xcc, 0xf4, 0xa4, 0x7c, 0xc7, 0xc2, 0x15, 0x3d, 0x86, 0xd5, 0xc3, 0x31, 0x9e, 0x9e, 0xe2,
	0xe4, 0xfc, 0x80, 0x5c, 0x71, 0x8b, 0xb2, 0x8c, 0x5c, 0x71, 0x43, 0x99, 0x58, 0x47, 0x7b, 0xb0,
	0xe6, 0xa6, 0x6a, 0x94, 0x7b, 0xb0, 0xcc, 0x29, 0x4e, 0xce, 0xfb, 0x15, 0xc7, 0x6d, 0xe9, 0x38,
	0xa1, 0x69, 0xf4, 0xb6, 0xaa, 0x2f, 0xbe, 0x56, 0x7d, 0x41, 0xab, 0x4c, 0x6f, 0xc7, 0x72, 0xed,
	0xd6, 0x99, 0xab, 0xd5, 0x79, 0x59, 0x81, 0xab, 0x3a, 0x55, 0x8b, 0x85, 0xf6, 0xf7, 0x4b, 0x6a,
	0xb8, 0xf2, 0x8d, 0xef, 0x84, 0x8e, 0xa3, 0x27, 0xd6, 0x56, 0x5c, 0x32, 0x62, 0xf1, 0x5b, 0x08,
	0x5b, 0x1f, 0x42, 0x19, 0xd1, 0x2b, 0x58, 0xaf, 0x65, 0xdf, 0x1e, 0xe9, 0x2b, 0xa0, 0x63, 0x71,
	0xe0, 0x23, 0x82, 0x69, 0x62, 0xdf, 0xe3, 0x45, 0x49, 0xe8, 0xd4, 0xdc, 0xa3, 0x34, 0xd4, 0x3d,
	0x8e, 0x08, 0x4b, 0xbf, 0x13, 0xd9, 0x6c, 0x27, 0x9e, 0xd9, 0x28, 0x84, 0x25, 0xb1, 0xce, 0xca,
	0x89, 0x7c, 0x4d, 0x9d, 0xd8, 0x98, 0x82, 0x4e, 0x07, 0x41, 0x9f, 0xed, 0x29, 0x2c, 0x51, 0xc2,
	0xca, 0x31, 0x67, 0xa1, 0xb7, 0x35, 0xbf, 0xe3, 0xf7, 0xd6, 0x77, 0x67, 0xc3, 0x21, 0xf3, 0x63,
	0x19, 0x8d, 0x4d, 0x56, 0xf4, 0xcb, 0x03, 0xdf, 0x0a, 0x34, 0x8d, 0x88, 0x7c, 0x03, 0x62, 0x12,
	0xe6, 0xf4, 0x1b, 0x10, 0x23, 0xb0, 0x01, 0x8b, 0x98, 0xf2, 0x94, 0x71, 0xfd, 0xcc, 0xb5, 0x25,
	0x7a, 0xc4, 0xe3, 0xd3, 0x72, 0xa2, 0x1f, 0xb6, 0x32, 0x44, 0x8f, 0xac, 0x18, 0xf2, 0x29, 0xc7,
	0xa3, 0x70, 0x41, 0x5d, 0xa8, 0xb1, 0x45, 0x6c, 0x42, 0x38, 0x1e, 0x60, 0x8e, 0xc3, 0x45, 0xf5,
	0x8e, 0x8d, 0x2d, 0x78, 0xdc, 0x17, 0x05, 0xee, 0x8e, 0xc7, 0x77, 0xb0, 0xea, 0x20, 0x68, 0x1e,
	0x9f, 0xd5, 0x79, 0xdc, 0xa8, 0x78, 0xdc, 0x97, 0x9d, 0xd6, 0x89, 0xfc, 0xe1, 0x81, 0x2f, 0x2b,
	0xfd, 0x27, 0x22, 0x25, 0x65, 0x7c, 0x28, 0x29, 0x6b, 0x19, 0xca, 0x94, 0xed, 0x50, 0xb6, 0x50,
	0xa3, 0x0c, 0xc3, 0xaa, 0x3a, 0xe0, 0xdd, 0x71, 0xf6, 0x1e, 0xd6, 0x5c, 0x88, 0x7f, 0x26, 0x2d,
	0x83, 0xc0, 0x0e, 0xdc, 0x9a, 0x34, 0x9b, 0x9c, 0xf9, 0x3f, 0x90, 0xd3, 0x72, 0xc9, 0xe9, 0xbd,
	0x51, 0xbf, 0x07, 0x47, 0x84, 0x5e, 0xa6, 0x09, 0x41, 0x2f, 0xa0, 0x25, 0x4c, 0x64, 0x0d, 0x89,
	0xf5, 0x73, 0xd1, 0xdd, 0xa8, 0xbb, 0x55, 0x9f, 0xa2, 0x8a, 0x50, 0x57, 0xab, 0x8a, 0x30, 0xed,
	0x2a, 0x96, 0x7a, 0xdb, 0x55, 0x6c, 0x4d, 0xee, 0x0d, 0x5c, 0xc1, 0x35, 0xd5, 0x3e, 0x43, 0x60,
	0xbb, 0xd1, 0x66, 0xb5, 0xbd, 0x41, 0x9f, 0xbb, 0x0f, 0x6e, 0x0a, 0x5f, 0x47, 0x11, 0xdf, 0x06,
	0x14, 0xf1, 0x6d, 0x42, 0xb1, 0x54, 0xba, 0x09, 0xc5, 0x16, 0xdf, 0xde, 0x59, 0x4d, 0x59, 0x0d,
	0xcc, 0x21, 0x74, 0x1c, 0x3f, 0x6a, 0x2a, 0x64, 0x49, 0x71, 0xf7, 0xe1, 0x8d, 0x71, 0x8d, 0xe4,
	0x2a, 0xab, 0xc1, 0xf9, 0x08, 0xbe, 0x72, 0xc8, 0x18, 0xba, 0x5f, 0x13, 0x3d, 0x67, 0x14, 0xba,
	0x9b, 0x37, 0x44, 0x2b, 0x04, 0x4b, 0x11, 0xae, 0x21, 0xc8, 0x98, 0x8d, 0x70, 0x5d, 0xa0, 0x6c,
	0x84, 0x06, 0x71, 0xe9, 0x25, 0xee, 0x88, 0x1a, 0x88, 0x4f, 0x10, 0x68, 0x08, 0xa5, 0x00, 0x9b,
	0xf5, 0xe9, 0xf9, 0x1b, 0x90, 0xd3, 0x45, 0xf9, 0x5f, 0x68, 0xef, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x8f, 0x34, 0xef, 0xcd, 0x1d, 0x09, 0x00, 0x00,
}
